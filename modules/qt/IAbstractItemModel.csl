/*
	Interface for qt's AbstractItemModel.
 */
interface IAbstractItemModel
{
	// A delegate so observers can listen to tree item events, such as itemClicked().
	ITreeItemObserver treeItemObserver;
	
	/* 
		Data delegate for model instance.
		The delegate is used by model implentation to acquire access the model API
		whenever UI data needs update. \see IAbstractItemModelDelegate.
		
	 */
	IAbstractItemModelDelegate delegate;
	
	//! Installs the concrete Qt model implementation into Qt subsystem.
	void installModel( in Object view );
	
	/**** Below methods are used to notify UI of changes in the model ****/
	
	//! Notifies that the model was reset.
	void beginReset();
   	void endReset();    
	
	//! Notifies UI of model columns/rows insertion or removal.
	void beginInsertColumns( in int32 parentIndex, in int32 startCol, in int32 endCol );
	void endInsertColumns();
	void beginRemoveColumns( in int32 parentIndex, in int32 startCol, in int32 endCol );
	void endRemoveColumns();
	void beginInsertRows( in int32 parentIndex, in int32 startRow, in int32 endRow );
	void endInsertRows();
	void beginRemoveRows( in int32 parentIndex, in int32 startRow, in int32 endRow );
	void endRemoveRows();

	/*! 
		Notifies listeners about some change in the model. This 
		is used to inform views that an update is necessary.
		Important: this function is for existing index only. For added or removed
		rows/columnd use columnsInserted or columnsRemoved.
	 */
	void notifyDataChanged( in int32 fromIndex, in int32 toIndex );
};
